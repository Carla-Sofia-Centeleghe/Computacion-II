# celery_config.py:
Función principal: Configura Celery para manejar tareas en segundo plano para clasificar imagenes y para administrar logs.
Log: alamacena y guarda los logs
Tarea principal: classify_image_task(filepath) que carga un modelo de TensorFlow, procesa una imagen y devuelve una clasificación (Pizza o Carne)​(celery_config).

# enchufe.py:
Función principal: Implementa un servidor concurrente usando sockets para manejar múltiples clientes y coordina la comunicación con el cliente para recibir imágenes.
Tareas:
Recibe una imagen desde el cliente.
Envia la tarea de clasificación a Celery usando classify_image_task.delay(file_path).
Envía de vuelta el ID de la tarea al cliente.
Log: almacena y guarda logs

#tkinter_app.py:
Interfaz gráfica: Crea una aplicación de escritorio usando Tkinter que permite al usuario seleccionar una imagen, enviarla al servidor para su clasificación y recibir el ID de la tarea.
Funcionalidad:
Botón de selección de archivo.
Botón de carga y clasificación que maneja la comunicación con el servidor.
Barra de progreso visualiza el proceso de envío y recepción de datos​(tkinter_app).

